#!/bin/bash
sudo echo "Port 8080" >> /etc/ssh/sshd_config
sudo systemctl daemon-reload
sudo systemctl restart ssh || sudo systemctl restart sshd

/////////End Install//////////

### Install container runtime - containerd

# sysctl params required by setup, params persist across reboots
cat <<EOF | sudo tee /etc/sysctl.d/k8s.conf
net.ipv4.ip_forward = 1
EOF

# Apply sysctl params without reboot
sudo sysctl --system

Verify that net.ipv4.ip_forward is set to 1 with:
sysctl net.ipv4.ip_forward

sudo apt-get update
sudo apt-get install -y containerd
sudo mkdir -p /etc/containerd
containerd config default | sudo tee /etc/containerd/config.toml
sudo sed -i 's/SystemdCgroup = false/SystemdCgroup = true/' /etc/containerd/config.toml
##nano /etc/containerd/config.toml

##[plugins."io.containerd.grpc.v1.cri".containerd.runtimes.runc]
  ...
##[plugins."io.containerd.grpc.v1.cri".containerd.runtimes.runc.options]
   ## SystemdCgroup = true

sudo systemctl restart containerd
sudo systemctl enable containerd
sudo systemctl status containerd

### Install Kubeadm, Kubelet, Kubectl
sudo ufw disable
sudo swapoff -a

sudo apt-get update
# apt-transport-https may be a dummy package; if so, you can skip that package
sudo apt-get install -y apt-transport-https ca-certificates curl gpg

# If the directory `/etc/apt/keyrings` does not exist, it should be created before the curl command, read the note below.
# sudo mkdir -p -m 755 /etc/apt/keyrings
curl -fsSL https://pkgs.k8s.io/core:/stable:/v1.34/deb/Release.key | sudo gpg --dearmor -o /etc/apt/keyrings/kubernetes-apt-keyring.gpg


# This overwrites any existing configuration in /etc/apt/sources.list.d/kubernetes.list
echo 'deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.gpg] https://pkgs.k8s.io/core:/stable:/v1.34/deb/ /' | sudo tee /etc/apt/sources.list.d/kubernetes.list


sudo apt-get update
sudo apt-get install -y kubelet kubeadm kubectl
sudo apt-mark hold kubelet kubeadm kubectl


#########End install tool##########

### Initiate Kubeadm control plane configuration on the master node
### Set env

IPADDR="10.0.9.23"
NODENAME=$(hostname -s)
POD_CIDR="192.168.0.0/16

